{"version":3,"sources":["components/UI/Header.js","components/UI/ErrorMessage.js","components/UI/Spinner.js","components/UI/Button.js","components/UI/Input.js","components/Navigation/Navigation.js","store/actions/getCurrency.js","store/actions/actionTypes.js","store/actions/getResults.js","components/Table/Table.js","containers/App.js","store/reducers/getCurrency.js","store/reducers/getResults.js","index.js"],"names":["header","props","react_default","a","createElement","className","text","errorMessage","spinner","button","type","onClick","disabled","title","input","id","onChange","Navigation","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","GetResults","e","preventDefault","onGetResults","state","currency","dateFrom","dateTo","dateFromChange","bind","assertThisInitialized","dateToChange","currencyChange","inherits","createClass","key","value","setState","target","currentTarget","onGetCurrencyList","currencyListData","screen","Spinner","loading","error","ErrorMessage","map","list","index","CcyAmt","Ccy","size","Input","Button","Component","connect","currencyList","dispatch","parseStringList","require","parseString","axios","all","get","concat","then","spread","currentRates","allCurrencies","data","err","getCurrencyListSuccess","FxRates","FxRate","currentData","getCurrencyRatesSuccess","CcyTbl","CcyNtry","catch","getCurrencyFail","method","url","headers","content-type","response","getResultsSuccess","getResultsFail","actions","Table","apply","arguments","results","tableScreen","resultsLoading","resultsError","currencyCode","currencyRate","i","length","CcyNm","_","Amt","keys","forEach","push","scope","units","percent","proportion","rez","date","Dt","toFixed","pop","rslt","App","Header","components_Navigation_Navigation","components_Table_Table","initialState","reducer","undefined","action","objectSpread","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","getCurrencyReducer","getResultsReducer","store","createStore","applyMiddleware","thunk","app","es","containers_App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01827731.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst header = props => (\r\n    <div className=\"infoBlock-header\">\r\n        <div className=\"infoBlock-header--text\" >\r\n            <h1>{props.text}</h1>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default header;","import React from 'react';\r\n\r\nconst errorMessage = props => (\r\n    <div className={props.className}>\r\n        <h6>Error! Please try again!</h6>  \r\n    </div>     \r\n)\r\n    \r\nexport default errorMessage;","import React from 'react';\r\n\r\nconst spinner = () => (\r\n    <div className=\"lds-dual-ring\"></div>  \r\n);\r\n\r\nexport default spinner;","import React from 'react';\r\n\r\nconst button = props => (\r\n    <div className={props.className}>\r\n        <button type={props.type} onClick={props.onClick} disabled={props.disabled}>{props.title}</button>\r\n    </div>\r\n);\r\n\r\nexport default button;","import React from 'react';\r\n\r\nconst input = props => (\r\n    <div className={props.className}>\r\n        <input type={props.type} id={props.id} onChange={props.onChange}></input>\r\n    </div>\r\n);\r\n\r\nexport default input;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ErrorMessage from '../UI/ErrorMessage';\r\nimport Spinner from '../UI/Spinner';\r\nimport * as actions from '../../store/actions/index';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '../UI/Button';\r\nimport Input from '../UI/Input';\r\n\r\n\r\nexport class Navigation extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {dateFrom: '', dateTo: '', currency: ''};\r\n        this.dateFromChange = this.dateFromChange.bind(this);\r\n        this.dateToChange = this.dateToChange.bind(this); \r\n        this.currencyChange = this.currencyChange.bind(this);  \r\n    }\r\n\r\n    dateFromChange(e) {\r\n        this.setState({dateFrom: e.target.value});\r\n     }\r\n\r\n    dateToChange(e) {\r\n        this.setState({dateTo: e.target.value});\r\n    }\r\n\r\n    currencyChange(e) {\r\n        this.setState({currency: e.currentTarget.value});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onGetCurrencyList();        \r\n    };\r\n\r\n    GetResults = (e) => {\r\n        e.preventDefault();  \r\n        this.props.onGetResults(this.state.currency, this.state.dateFrom, this.state.dateTo)\r\n    };\r\n\r\n\r\n    render () {\r\n        let currencyListData = null;\r\n        let screen = <Spinner/>;\r\n\r\n        if (!this.props.loading && this.props.currencyListData !== null && this.props.error == null) {\r\n            currencyListData = this.props.currencyListData.map(( list, index) => \r\n                <option key={index}  value={list.CcyAmt[1].Ccy[0]}>{list.CcyAmt[1].Ccy[0]}</option>\r\n            );\r\n\r\n        screen = (\r\n            <div size=\"10\" className=\"infoBlock-navigation-block--currency-box\" >\r\n                <select className=\"currency-box-results\" id='currencySymbol' onChange={this.currencyChange}>\r\n                    <option >Currency</option>\r\n                    {currencyListData} \r\n                </select>\r\n            </div>\r\n        );\r\n\r\n        } else if (!this.props.loading) {\r\n            screen = <ErrorMessage/>\r\n        } else {\r\n            screen = <Spinner/>;\r\n        }\r\n\r\n        return (\r\n            <div className=\"infoBlock-navigation\">\r\n                <div className=\"infoBlock-navigation-block\">\r\n                    <Input className=\"infoBlock-navigation-block--calendarFrom\" type=\"date\" id=\"dateFrom\" onChange={this.dateFromChange}/>   \r\n                    <Input className=\"infoBlock-navigation-block--calendarTo\" type=\"date\" id=\"dateTo\" onChange={this.dateToChange}/>\r\n                    <div className=\"infoBlock-navigation-block--currency\">\r\n                        {screen}\r\n                    </div>\r\n                    <Button className=\"infoBlock-navigation-block--button\" type=\"submit\" title=\"Search\" onClick={this.GetResults} disabled={!this.state.dateFrom || !this.state.dateTo || !this.state.currency}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n} \r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currencyListData: state.currencyList.currencyList,\r\n        loading: state.currencyList.loading,\r\n        error: state.currencyList.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onGetCurrencyList: () => dispatch(actions.getCurrencyStart()),\r\n        onGetResults: (currency, dateFrom, dateTo) => dispatch(actions.getResultsStart(currency, dateFrom, dateTo))\r\n    };\r\n};\r\n\r\nNavigation.propTypes = {\r\n    currencyListData: PropTypes.array,\r\n    loading: PropTypes.bool,\r\n    error: PropTypes.any\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getCurrencyList = () => {\r\n    return {\r\n        type: actionTypes.GET_CURRENCY_LIST_START\r\n    };\r\n};\r\n\r\nexport const getCurrencyListSuccess = (data) => {\r\n    return {\r\n        type: actionTypes.GET_CURRENCY_LIST_SUCCESS,\r\n        currencyList: data\r\n\r\n    };\r\n};\r\n\r\nexport const getCurrencyRatesSuccess = (data) => {\r\n    return {\r\n        type: actionTypes.GET_CURRENCY_RATES_SUCCESS,\r\n        currentData: data\r\n\r\n    };\r\n};\r\n\r\nexport const getCurrencyFail = (error) => {\r\n    return {\r\n        type: actionTypes.GET_CURRENCY_LIST_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const getCurrencyStart = () => {\r\n    return dispatch => {\r\n        dispatch(getCurrencyList());\r\n        let parseStringList = require('xml2js').parseString;\r\n        let parseString = require('xml2js').parseString;\r\n        axios.all([\r\n            axios.get(`${'https://cors-anywhere.herokuapp.com/'}http://old.lb.lt/webservices/fxrates/FxRates.asmx/getCurrentFxRates?tp=eu`),\r\n            axios.get(`${'https://cors-anywhere.herokuapp.com/'}http://old.lb.lt/webservices/fxrates/FxRates.asmx/getCurrencyList`)\r\n          ])\r\n          .then(axios.spread((currentRates, allCurrencies) => {\r\n            parseStringList(currentRates.data, function (err, data) {\r\n             dispatch(getCurrencyListSuccess(data.FxRates.FxRate))\r\n            });\r\n            parseString(allCurrencies.data, function (err, data) { \r\n                dispatch(getCurrencyRatesSuccess(data.CcyTbl.CcyNtry))\r\n            });\r\n            \r\n          })).catch (error => {\r\n            dispatch(getCurrencyFail(error));\r\n            });\r\n        \r\n    }\r\n\r\n}\r\n","export const GET_CURRENCY_LIST_START = \"GET_CURRENCY_LIST_START\";\r\nexport const GET_CURRENCY_LIST_SUCCESS = \"GET_CURRENCY_LIST_SUCCESS\";\r\nexport const GET_CURRENCY_RATES_SUCCESS = \"GET_CURRENCY_RATES_SUCCESS\";\r\nexport const GET_CURRENCY_LIST_FAIL = \"GET_CURRENCY_LIST_FAIL\";\r\n\r\nexport const GET_RESULTS_START = \"GET_RESULTS_START\";\r\nexport const GET_RESULTS_SUCCESS = \"GET_RESULTS_SUCCESS\";\r\nexport const GET_RESULTS_FAIL = \"GET_RESULTS_FAIL\";","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getResults = () => {\r\n    return {\r\n        type: actionTypes.GET_RESULTS_START\r\n    };\r\n};\r\n\r\nexport const getResultsSuccess = (data) => {\r\n    return {\r\n        type: actionTypes.GET_RESULTS_SUCCESS,\r\n        data: data\r\n    };\r\n};\r\n\r\nexport const getResultsFail = (error) => {\r\n    return {\r\n        type: actionTypes.GET_RESULTS_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const getResultsStart = (currency, dateFrom, dateTo) => {\r\n    return dispatch => {\r\n        dispatch(getResults());\r\n        let parseString = require('xml2js').parseString;\r\n        axios({\r\n            method: \"GET\",\r\n            url: `${'https://cors-anywhere.herokuapp.com/'}http://old.lb.lt/webservices/fxrates/FxRates.asmx/getFxRatesForCurrency?tp=eu&ccy=${currency}&dtFrom=${dateFrom}&dtTo=${dateTo}`,\r\n            headers: { 'content-type': 'application/x-www-form-urlencoded' }\r\n        }).then (function (response) {\r\n            parseString(response.data, function (err, data) {   \r\n                dispatch(getResultsSuccess(data.FxRates.FxRate))\r\n            }); \r\n        }).catch (error => {\r\n            dispatch(getResultsFail(error));\r\n        });\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport ErrorMessage from '../UI/ErrorMessage';\r\nimport Spinner from '../UI/Spinner';\r\n\r\nexport class Table extends Component {\r\n\r\n    render() {\r\n        let results = [];\r\n        let tableScreen = null;\r\n\r\n        if (!this.props.resultsLoading && this.props.results !== null && this.props.resultsError == null) {\r\n            results = null;\r\n            let units = [];\r\n            let percent = [];            \r\n            let proportion = this.props.results.map( rez=> rez.CcyAmt[1].Amt[0] );\r\n            let date = this.props.results.map(rez => rez.Dt[0] );\r\n\r\n            for(let i = 0; i<=proportion.length; i++) {\r\n                units.push((proportion[i] - proportion[i+1]).toFixed(4));\r\n                percent.push(((units[i] / proportion[i+1]) * 100).toFixed(4));\r\n            }        \r\n\r\n            proportion.pop();\r\n            date.pop();\r\n\r\n            results = proportion.map(( rslt, index) => \r\n                <tr key={index} ><td>{date[index]}</td><td>{rslt}</td><td>{units[index]}</td><td>{percent[index]}</td></tr>\r\n            );\r\n\r\n            tableScreen = (\r\n                <table className=\"table table-hover\">\r\n                    <thead className=\"infoBlock-table--heading\">\r\n                        <tr>\r\n                        <th scope=\"col\">Date</th>\r\n                        <th scope=\"col\">Proportion</th>\r\n                        <th scope=\"col\">Change</th>\r\n                        <th scope=\"col\">Change %</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"table-results\">\r\n                        {results}\r\n                    </tbody>              \r\n                </table>\r\n            );\r\n\r\n        } else if (!this.props.resultsLoading && this.props.currentData !== null && this.props.resultsError == null) {\r\n            \r\n            let currencyCode = {};\r\n            let currencyRate = {};\r\n            let list = {};\r\n            \r\n            for (let i = 0; i <= this.props.currentData.length-1; i++) {\r\n                currencyCode[this.props.currentData[i].Ccy[0]] = this.props.currentData[i].CcyNm[1]._;\r\n            }  \r\n            \r\n            for (let i = 0; i <= this.props.currencyListData.length-1; i++) {\r\n                currencyRate[this.props.currencyListData[i].CcyAmt[1].Ccy[0]] = this.props.currencyListData[i].CcyAmt[1].Amt[0];\r\n            }\r\n\r\n            Object.keys(currencyRate).forEach(function (key, index) {\r\n                list[index] = [currencyCode[key], [key], currencyRate[key]];                \r\n            });\r\n            \r\n            Object.keys(list).forEach(function (key) {\r\n                 results.push(<tr key={key}><td>{list[key][0]}</td><td>{list[key][1][0]}</td><td>{list[key][2]}</td></tr>);                \r\n            });\r\n            \r\n            tableScreen = (\r\n                <div>\r\n                    <table className=\"table table-hover\">                    \r\n                        <thead className=\"infoBlock-table--heading\"  >\r\n                            <tr>\r\n                            <th scope=\"col\">Currency name</th>\r\n                            <th scope=\"col\">Currency code</th>\r\n                            <th scope=\"col\">Proportion</th>\r\n                            </tr>                        \r\n                        </thead>\r\n                        <tbody className=\"table-results\">\r\n                            {results}\r\n                        </tbody>              \r\n                    </table>\r\n                </div>\r\n            );\r\n        } else if (this.props.resultsError !== null) {            \r\n            tableScreen = <ErrorMessage/>;            \r\n        } else {            \r\n            tableScreen = <Spinner/>;\r\n        }\r\n\r\n        return(\r\n            <div className=\"infoBlock-table\">\r\n                {tableScreen}\r\n            </div> \r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        results: state.results.data,\r\n        resultsLoading: state.results.loading,\r\n        resultsError: state.results.error,\r\n        currentData: state.currencyList.currentData,\r\n        currencyListData: state.currencyList.currencyList,   \r\n    };\r\n}\r\n\r\nTable.propTypes = {\r\n    results: PropTypes.array,\r\n    resultsLoading: PropTypes.bool,\r\n    resultsError: PropTypes.array,\r\n    currentData: PropTypes.array,\r\n    currencyListData:PropTypes.array\r\n};\r\n\r\nexport default connect(mapStateToProps)(Table);","import React, { Component } from 'react';\nimport Header from '../components/UI/Header'\nimport Navigation from '../components/Navigation/Navigation';\nimport Table from '../components/Table/Table';\n\nimport '../assets/css/main.css';\n\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"infoBlock\">\n                <Header text=\"Daily euro foreign exchange reference rates\"/>\n                <Navigation/>\n                <Table/> \n            </div>\n        );\n    }\n}\n\nexport default App;\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    currentData: null,\r\n    currencyList: null,\r\n    loading: true,\r\n    error: null\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_CURRENCY_LIST_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case actionTypes.GET_CURRENCY_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                currencyList: action.currencyList,\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case actionTypes.GET_CURRENCY_RATES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                currentData: action.currentData,\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case actionTypes.GET_CURRENCY_LIST_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    data: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_RESULTS_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case actionTypes.GET_RESULTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                data: action.data,\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case actionTypes.GET_RESULTS_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport App from './containers/App';\nimport getCurrencyReducer from './store/reducers/getCurrency';\nimport getResultsReducer from './store/reducers/getResults';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    currencyList: getCurrencyReducer,\n    results: getResultsReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n    <Provider store={store}>\n        <App/>    \n    </Provider>    \n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n"],"sourceRoot":""}